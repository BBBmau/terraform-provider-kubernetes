name: "Reviewer Assigner"

on:
    pull_request:
        types: [opened]
    issues:
        types: [opened]

jobs:
  create-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
      - run: npm install @pagerduty/pdjs
      - uses: actions/github-script@e69ef5462fd455e02edcaf4dd7708eda96b9eda0 # v7.0.0
        env:
          PAGERDUTY_TOKEN: ${{ secrets.PAGERDUTY_TOKEN }}
        with:
          script: |
                const { PAGERDUTY_TOKEN } = process.env
                const pdjs = require('@pagerduty/pdjs');
                const pd = pdjs({token: '${PAGERDUTY_TOKEN}'});
                pd.get('/schedules/id/users').then({response} => {
                    console.log("Assigning to " + response.users[0].name)
                }
                
                console.log("triggered by: " + context.eventName)
                 if (context.eventName == "issues"){
                     try{
                         await github.rest.issues.addAssignees({
                             owner: context.repo.owner,
                             repo: context.repo.repo,
                             assignees: ["BBBmau"], // this will be replaced with pagerduty resp
                             issue_number: context.issue.number, // issue.number is used for both issues and PRs
                         })
                     } catch(error){
                         core.setFailed("error assigning assignee:" + error)
                     }
                 }
                 if (context.eventName == "pull_request"){
                     try{
                         await github.rest.pulls.requestReviewers({
                             owner: context.repo.owner,
                             repo: context.repo.repo,
                             reviewers: ["BBBmau"], // this will be replaced with pagerduty resp
                             pull_number: (context.issue.number - 1), // for some reason we get PR+1 from context
                         })
                     } catch(error){
                         core.setFailed("error assigning reviewer:" + error)
                     }
                 }
